city_service_app  | INFO:     Application startup complete.
city_service_app  | 2025-07-23 10:43:31,813 INFO sqlalchemy.engine.Engine BEGIN (implicit)
city_service_app  | 2025-07-23 10:43:31 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
city_service_app  | 2025-07-23 10:43:31,813 INFO sqlalchemy.engine.Engine SELECT 1
city_service_app  | 2025-07-23 10:43:31,814 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ()
city_service_app  | 2025-07-23 10:43:31 - sqlalchemy.engine.Engine - INFO - SELECT 1
city_service_app  | 2025-07-23 10:43:31 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ()
city_service_app  | 2025-07-23 10:43:31,814 INFO sqlalchemy.engine.Engine ROLLBACK
city_service_app  | 2025-07-23 10:43:31 - sqlalchemy.engine.Engine - INFO - ROLLBACK
city_service_app  | 2025-07-23 10:43:31 - app.database - ERROR - ❌ Database health check failed: A transaction is already begun on this Session.
city_service_app  | 2025-07-23 10:43:31 - app.database - ERROR - ❌ Database health check error: 'QueuePool' object has no attribute 'invalidated'
city_service_app  | 2025-07-23 10:43:31 - app.main - ERROR - ❌ Health check failed: 'QueuePool' object has no attribute 'invalidated'
city_service_app  | Traceback (most recent call last):
city_service_app  |   File "/app/app/database.py", line 305, in check_database_health
city_service_app  |     connection_info = await db_manager.get_connection_info()
city_service_app  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
city_service_app  |   File "/app/app/database.py", line 234, in get_connection_info
city_service_app  |     "invalid_connections": pool.invalidated(),
city_service_app  |                            ^^^^^^^^^^^^^^^^
city_service_app  | AttributeError: 'QueuePool' object has no attribute 'invalidated'
city_service_app  | 
city_service_app  | During handling of the above exception, another exception occurred:
city_service_app  | 
city_service_app  | Traceback (most recent call last):
city_service_app  |   File "/app/app/main.py", line 451, in health_check
city_service_app  |     db_health_info = await check_database_health()
city_service_app  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
city_service_app  |   File "/app/app/database.py", line 329, in check_database_health
city_service_app  |     "connection_info": await db_manager.get_connection_info(),
city_service_app  |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
city_service_app  |   File "/app/app/database.py", line 234, in get_connection_info
city_service_app  |     "invalid_connections": pool.invalidated(),
city_service_app  |                            ^^^^^^^^^^^^^^^^
